
# This is the configuring for logging displayed in the Application Server
log4j.rootCategory= DEBUG, stdout, R

# Replace the line above if you want to put a log file into the directory
# you start Tomcat from
# log4j.rootCategory=INFO, stdout, R

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=[%p] %d{yyyy-MM-dd HH:mm:ss.SSS} [%F:%L]%m%n

#%m   输出代码中指定的消息
#%p   输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r   输出自应用启动到输出该log信息耗费的毫秒数
#%c   输出所属的类目，通常就是所在类的全名
#%t   输出产生该日志事件的线程名
#%n   输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
#%d   输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日  22 ： 10 ： 28 ， 921
#%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 )


log4j.logger.com.hazelcast=debug
#log4j.logger.com.hazelcast.cluster=debug
#log4j.logger.com.hazelcast.partition=debug
#log4j.logger.com.hazelcast.partition.InternalPartitionService=debug
#log4j.logger.com.hazelcast.nio=debug
#log4j.logger.com.hazelcast.hibernate=debug


# ========================//TODO 这一段配置暂时没有用  start================================================================
log4j.appender.R=org.apache.log4j.DailyRollingFileAppender
# You can change this to be an absolute path or even an environment variable
# If you're using an environment variable, you will have to set JAVA_OPTS
# to contain this variables - for example in the catalina.sh or catalina.bat
# file
log4j.appender.R.File=${catalina.home}/logs/niutal_jwglxt.log
#log4j.appender.R.maxFileSize=1000KB
# Don't keep a backup file
#log4j.appender.R.maxBackupIndex=10
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%t %d{dd/MM HH:mm:ss,SSS} %p [%20.30c{2}]-%L %m%n

# ========================//TODO 这一段配置暂时没有用  end  ================================================================
log4j.logger.com.eucita=DEBUG
log4j.logger.com.eucita.component.acegi=WARN
log4j.logger.com.eucita.utils.GenericsUtils=ERROR

# If programmed properly the most messages would be at DEBUG
# and the least at FATAL.

# Control logging for other open source packages
#log4j.logger.org.apache.commons=ERROR

log4j.logger.org.apache=WARN
log4j.logger.org.hibernate=WARN
log4j.logger.org.springframework=WARN
log4j.logger.com.opensymphony=WARN
log4j.logger.org.springmodules=WARN
log4j.logger.org.jbpm=WARN

#log4j.logger.com.opensymphony.webwork=DEBUG
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
#log4j.logger.java.sql.ResultSet=DEBUG
log4j.logger.com.ibatis=DEBUG
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG

log4j.logger.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
log4j.logger.org.hibernate.type.descriptor.sql.BasicExtractor=DEBUG
log4j.logger.org.hibernate.SQL=DEBUG
log4j.logger.org.hibernate.engine.QueryParameters=DEBUG
log4j.logger.org.hibernate.engine.query.HQLQueryPlan=DEBUG
log4j.logger.org.hibernate.util.DTDEntityResolver=OFF
